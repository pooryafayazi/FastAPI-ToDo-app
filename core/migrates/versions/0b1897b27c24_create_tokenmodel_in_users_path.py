"""create TokenModel in users path

Revision ID: 0b1897b27c24
Revises: 88f862054f46
Create Date: 2025-08-26 14:32:06.010714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b1897b27c24'
down_revision: Union[str, Sequence[str], None] = '88f862054f46'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

from sqlalchemy import inspect

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    insp = inspect(bind)

    # --- create tokens table if not exists ---
    if "tokens" not in insp.get_table_names():
        op.create_table(
            "tokens",
            sa.Column("id", sa.Integer(), primary_key=True, autoincrement=True),
            sa.Column("user_id", sa.Integer(), nullable=True),
            sa.Column("token", sa.String(), nullable=False, unique=True),
            sa.Column("create_date", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)")),
            sa.Column("expires_in", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
        )

    # --- add FK on tasks.user_id (with name) if needed ---
    # چون SQLite است، بهتر است batch استفاده شود
    cols = [c["name"] for c in insp.get_columns("tasks")]
    fks  = [fk["name"] for fk in insp.get_foreign_keys("tasks") if fk.get("name")]

    with op.batch_alter_table("tasks") as batch_op:
        if "user_id" not in cols:
            batch_op.add_column(sa.Column("user_id", sa.Integer(), nullable=True))

        # اگر FK با همین نام وجود ندارد، بساز
        if "fk_tasks_user_id_users" not in fks:
            batch_op.create_foreign_key(
                "fk_tasks_user_id_users",  # *** نام اجباری ***
                "users",
                ["user_id"],
                ["id"],
            )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    insp = inspect(bind)

    # Drop FK و ستون از tasks اگر وجود داشته باشد
    fks  = [fk["name"] for fk in insp.get_foreign_keys("tasks") if fk.get("name")]
    with op.batch_alter_table("tasks") as batch_op:
        if "fk_tasks_user_id_users" in fks:
            batch_op.drop_constraint("fk_tasks_user_id_users", type_="foreignkey")
        cols = [c["name"] for c in insp.get_columns("tasks")]
        if "user_id" in cols:
            batch_op.drop_column("user_id")

    # Drop tokens table اگر وجود داشته باشد
    if "tokens" in insp.get_table_names():
        op.drop_table("tokens")
    # ### end Alembic commands ###

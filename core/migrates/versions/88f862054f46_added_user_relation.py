"""added user relation

Revision ID: 88f862054f46
Revises: 516982596ffa
Create Date: 2025-08-25 20:20:28.891939

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '88f862054f46'
down_revision: Union[str, Sequence[str], None] = '516982596ffa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
from sqlalchemy import inspect

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    insp = inspect(bind)
    cols = [c['name'] for c in insp.get_columns('tasks')]

    # فقط اگر ستون وجود ندارد، اضافه کن
    if 'user_id' not in cols:
        op.add_column('tasks', sa.Column('user_id', sa.Integer(), nullable=True))
        op.create_foreign_key(
            'fk_tasks_user_id_users', 'tasks', 'users', ['user_id'], ['id']
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    insp = inspect(bind)
    cols = [c['name'] for c in insp.get_columns('tasks')]

    # فقط اگر ستون هست، حذف کن
    if 'user_id' in cols:
        op.drop_constraint('fk_tasks_user_id_users', 'tasks', type_='foreignkey')
        op.drop_column('tasks', 'user_id')
    # ### end Alembic commands ###
